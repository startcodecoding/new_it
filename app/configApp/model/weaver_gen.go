package model

// Code generated by "weaver generate". DO NOT EDIT.
import (
	"fmt"
	"github.com/ServiceWeaver/weaver/runtime/codegen"
)


// Local stub implementations.

// Client stub implementations.

// Server stub implementations.

// AutoMarshal implementations.

var _ codegen.AutoMarshal = &JWT{}

func (x *JWT) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("JWT.WeaverMarshal: nil receiver"))
	}
	enc.String(x.SigningKey)
	enc.Int64(x.ExpiresTime)
	enc.Int64(x.BufferTime)
	enc.String(x.Issuer)
}

func (x *JWT) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("JWT.WeaverUnmarshal: nil receiver"))
	}
	x.SigningKey = dec.String()
	x.ExpiresTime = dec.Int64()
	x.BufferTime = dec.Int64()
	x.Issuer = dec.String()
}

var _ codegen.AutoMarshal = &Mysql{}

func (x *Mysql) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Mysql.WeaverMarshal: nil receiver"))
	}
	enc.String(x.Ip)
	enc.String(x.Port)
	enc.String(x.Config)
	enc.String(x.Dbname)
	enc.String(x.Username)
	enc.String(x.Password)
	enc.Int(x.MaxIdleConns)
	enc.Int(x.MaxOpenConns)
	enc.String(x.LogMode)
}

func (x *Mysql) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Mysql.WeaverUnmarshal: nil receiver"))
	}
	x.Ip = dec.String()
	x.Port = dec.String()
	x.Config = dec.String()
	x.Dbname = dec.String()
	x.Username = dec.String()
	x.Password = dec.String()
	x.MaxIdleConns = dec.Int()
	x.MaxOpenConns = dec.Int()
	x.LogMode = dec.String()
}
